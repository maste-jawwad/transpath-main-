<!DOCTYPE html> 
<html data-wf-page="65847c1f88441e2edf835e39" data-wf-site="646b1c84a7e64d810254ac83">

<head>
  <meta charset="utf-8">
  <title>Blog</title>
  <meta content="Blog" property="og:title">
  <meta content="Blog" property="twitter:title">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  <link href="/css/normalize.css" rel="stylesheet" type="text/css">
  <link href="/css/webflow.css" rel="stylesheet" type="text/css">
  <link href="/css/water-tpt.webflow.css" rel="stylesheet" type="text/css">
  <script
    type="text/javascript">!function (o, c) { var n = c.documentElement, t = " w-mod-"; n.className += t + "js", ("ontouchstart" in o || o.DocumentTouch && c instanceof DocumentTouch) && (n.className += t + "touch") }(window, document);</script>
  <link href="/images/favicon.ico" rel="shortcut icon" type="image/x-icon">
  <link href="/images/webclip.png" rel="apple-touch-icon">
  <style>
    body {
      overflow-x: hidden;
    }

    .isdeets-overlay {
      overflow-x: hidden;
    }

    /* width */
    ::-webkit-scrollbar {
      width: 10px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
      background: #E0E0E2;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
      background: #96969C;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
      background: #39393C;
    }

    ::-moz-selection {
      color: auto;
      background: #7a7a7f;
    }

    ::selection {
      color: auto;
      background: #7a7a7f;
    }

    .isproj-overlay {
      overflow-x: hidden;
    }

    /* ðŸ”¥ Reduce gap between Authors & Citation */
    .authors-section {
      margin-bottom: 12px !important;
    }
    .citation-section {
      margin-top: 0 !important;
    }
  </style>
  <script>
    //refresh
    var context;
    var $window = $(window);
    if ($window.width() <= 991 && $window.width() >= 500) {
      context = 'small';
    } else if ($window.width() > 991) {
      context = 'large';
    }
    $(window).resize(function () {
      if (($window.width() <= 991) && ($window.width() >= 500) && (context != 'small')) {
        location.reload();
      } else if (context != 'large' && ($window.width() > 991)) {
        location.reload();
      }
    });
  </script>
</head>

<body>
  <div class="is-deets-wrapper is-blog">
    <div class="isdeets-overlay">
      <div class="is-full-section isdeets">
        <div class="is60">
          <div class="is-set">
            <div class="is-close-sticky">
              <a data-w-id="a43a1ed8-5034-663e-dcce-1c619528f7bd" href="/output"
                class="link-block-3 is-bt-close w-inline-block">
                <div class="is-lg-arr is-med is-diff"><img src="/images/LEFT-ARR.svg" loading="lazy" width="24" alt="">
                </div>
              </a>
            </div>
          </div>
          <div class="is24">
            <div class="is-sub">
              <h3 class="is-deets-header">
                <%= update.title %>
              </h3>
            </div>
            <div class="is-sub is-updates">
              <div class="is24 is-hori">
                <div class="isbody">
                  <%= months[update.date.getMonth()] %> &nbsp;
                    <%= update.date.getFullYear() %>
                </div>
                <div class="isbody isg50">
                  <%= update.basin %>
                </div>
              </div>
              <div class="is24 is-hori">
                <a href="<%= update.link %>" class="is-button w-inline-block">
                  <div class="isbody">View Link</div>
                </a><img src="/images/STAR.svg" class="is-w65">
                <a href="/uploads/Update/<%= alternativeSlugs.current %>/<%= update.download %>"
                  class="is-button w-inline-block"
                  id="download-link">
                  <div class="isbody">Download</div>
                </a>
              </div>
            </div>
          </div>
          <div data-delay="4000" data-animation="slide" class="slider is-updates w-slider" data-autoplay="false"
            data-easing="ease" data-hide-arrows="false" data-disable-swipe="false" data-autoplay-limit="0"
            data-nav-spacing="3" data-duration="500" data-infinite="true">
            <div class="mask w-slider-mask">
              <% update.photos.forEach(photo=> { %>
                <div class="w-slide">
                  <div class="is-slider-img"><img
                      src="/uploads/Update/<%= alternativeSlugs.current %>/<%= photo %>"
                      loading="lazy" alt="" class="is-inside-slide"></div>
                </div>
                <% }) %>
            </div>
            <div class="left-arrow w-slider-arrow-left">
              <div class="is-lg-arr is-med is-pointer"><img src="/images/LEFT-ARR.svg" loading="lazy" alt=""></div>
            </div>
            <div class="right-arrow w-slider-arrow-right">
              <div class="is-lg-arr is-med is-pointer"><img src="/images/RIGHT-ARR.svg" loading="lazy" alt=""></div>
            </div>
            <div class="slide-nav w-slider-nav w-round w-num"></div>
          </div>
          <div class="isbody is-updates"><%- update.description %></div>

          <!-- ðŸ”¥ AUTHORS SECTION -->
          <div class="is24 is-updates authors-section">
            <div class="is-sub">
              <h5>Authors &amp; Contributors</h5><img src="/images/STAR.svg" loading="lazy" alt="" class="is-65">
            </div>
            <div class="is-partner-grid is-more">
              <% try { %>
                <% update.people.forEach(person => { %>
                  <div class="is24">
                    <div class="is12 is-vert">
                      <div class="is-sub">
                        <h4 class="is-deets-header"><%= person.name %></h4>
                      </div>
                      <div class="isbody">
                        <%= person.designation %> | <%= person.department %>
                      </div>
                      <div class="isbody isg50">
                        <%= person.institute %>
                      </div>
                    </div>
                    <div class="is-hori-line"></div>
                  </div>
                <% }) %>
              <% } catch (error) { %>
                <div class="is24">
                  <p>Error loading authors</p>
                </div>
              <% } %>
            </div>
          </div>

          <!-- ðŸ”¥ CITATION SECTION (now directly below Authors) -->
          <% if (update.citation && update.citation.length > 0) { %>
            <div class="is24 is-updates citation-section">
              <div class="is-sub">
                <h5>Citation</h5><img src="/images/STAR.svg" loading="lazy" alt="" class="is-65">
              </div>
              <div class="isbody">
                <%= update.citation %>
              </div>
            </div>
          <% } %>

        </div>
      </div>
    </div>
  </div>
  <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=646b1c84a7e64d810254ac83"
    type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous"></script>
  <script src="/js/webflow.js" type="text/javascript"></script>
  <script>
    // Handle image fallback for different folder naming conventions
    document.addEventListener('DOMContentLoaded', function() {
      const images = document.querySelectorAll('.is-inside-slide');
      const downloadLink = document.getElementById('download-link');
      
      // Pre-calculate alternative folder names
      const currentSlug = '<%= alternativeSlugs.current %>';
      const legacySlug = '<%= alternativeSlugs.legacy %>';
      const urlDecodedSlug = '<%= alternativeSlugs.urlDecoded %>';
      const alphanumericSlug = '<%= alternativeSlugs.alphanumeric %>';
      
      // Function to try different folder naming conventions
      function tryAlternativePaths(originalSrc, filename) {
        const basePath = '/uploads/Update/';
        const alternatives = [
          basePath + legacySlug + '/' + filename,
          basePath + urlDecodedSlug + '/' + filename,
          basePath + alphanumericSlug + '/' + filename
        ];
        
        return alternatives;
      }
      
      // Handle image fallbacks
      images.forEach(function(img) {
        img.addEventListener('error', function() {
          const originalSrc = this.src;
          const filename = originalSrc.split('/').pop();
          const alternatives = tryAlternativePaths(originalSrc, filename);
          
          let currentIndex = 0;
          const tryNext = () => {
            if (currentIndex < alternatives.length) {
              this.src = alternatives[currentIndex];
              currentIndex++;
            }
          };
          
          this.onerror = tryNext;
          tryNext();
        });
      });
      
      // Handle download link fallback
      if (downloadLink) {
        downloadLink.addEventListener('click', function(e) {
          // Prevent immediate navigation so we can try fallbacks first
          e.preventDefault();
          // Check if the file exists by trying to fetch it
          fetch(this.href, { method: 'HEAD' })
            .then(response => {
              if (!response.ok) {
                throw new Error('File not found');
              }
              // Primary exists; proceed to download
              window.location.href = this.href;
            })
            .catch(() => {
              // Try alternative paths
              const originalHref = this.href;
              const filename = originalHref.split('/').pop();
              const alternatives = tryAlternativePaths(originalHref, filename);
              
              // Try each alternative
              let currentIndex = 0;
              const tryNextDownload = () => {
                if (currentIndex < alternatives.length) {
                  fetch(alternatives[currentIndex], { method: 'HEAD' })
                    .then(response => {
                      if (response.ok) {
                        this.href = alternatives[currentIndex];
                        window.location.href = this.href;
                      } else {
                        currentIndex++;
                        tryNextDownload();
                      }
                    })
                    .catch(() => {
                      currentIndex++;
                      tryNextDownload();
                    });
                }
              };
              
              tryNextDownload();
            });
        });
      }
    });
  </script>
</body>

</html>
